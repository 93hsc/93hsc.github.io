<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[前端小技巧]]></title>
      <url>/2016/08/06/pcSkill/</url>
      <content type="html"><![CDATA[<p>前端页面出现的各种问题和解决方法，以及一些实用技巧。<br><a id="more"></a></p>
<h1 id="HTML部分"><a href="#HTML部分" class="headerlink" title="HTML部分"></a>HTML部分</h1><h2 id="针对IE版本"><a href="#针对IE版本" class="headerlink" title="针对IE版本"></a>针对IE版本</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&lt;!--[if !IE]&gt; 所有的IE可识别 &lt;![endif]--&gt;</div><div class="line">&lt;!--[if IE 6]&gt; 仅IE6可识别 &lt;!-[endif]--&gt;</div><div class="line">&lt;!--[if lt IE 6]&gt; IE6以以下版本可识别 &lt;![endif]--&gt;</div><div class="line">&lt;!--[if gte IE 6]&gt; IE6以及IE6以上版本可识别 &lt;![endif]--&gt;</div><div class="line">&lt;!--[if IE 7]&gt; 仅IE7可识别 &lt;![endif]--&gt;</div><div class="line">&lt;!--[if lt IE 7]&gt; IE7以及IE7以下版本可识别 &lt;![endif]--&gt;</div><div class="line">&lt;!--[if gte IE 7]&gt; IE7以及IE7以上版本可识别 &lt;![endif]--&gt;</div><div class="line">&lt;!--[if IE 8]&gt; 仅IE8可识别 &lt;![endif]--&gt;</div><div class="line">&lt;!--[if IE 9]&gt; 仅IE9可识别 &lt;![endif]--&gt;</div></pre></td></tr></table></figure>
<h2 id="以当前最高标准模式显示页面"><a href="#以当前最高标准模式显示页面" class="headerlink" title="以当前最高标准模式显示页面"></a>以当前最高标准模式显示页面</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;/&gt;</div></pre></td></tr></table></figure>
<h1 id="CSS部分"><a href="#CSS部分" class="headerlink" title="CSS部分"></a>CSS部分</h1><h2 id="页面最小宽度"><a href="#页面最小宽度" class="headerlink" title="页面最小宽度"></a>页面最小宽度</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">min-height:1000px; _width:expression((document.documentElement.clientWidth||document.body.clientWidth)&lt;1000?&quot;1000px&quot;:&quot;&quot;);</div></pre></td></tr></table></figure>
<h2 id="解决IE6-7a标签绝对定位之后不存在的问题"><a href="#解决IE6-7a标签绝对定位之后不存在的问题" class="headerlink" title="解决IE6,7a标签绝对定位之后不存在的问题"></a>解决IE6,7a标签绝对定位之后不存在的问题</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">a&#123;background: url(about:blank);&#125;</div></pre></td></tr></table></figure>
<h2 id="单行文字超出显示省略号"><a href="#单行文字超出显示省略号" class="headerlink" title="单行文字超出显示省略号"></a>单行文字超出显示省略号</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">text-overflow: ellipsis; white-space: nowrap; overflow: hidden;</div></pre></td></tr></table></figure>
<h2 id="多行文字超出显示省略号仅限于支持css3的浏览器版本"><a href="#多行文字超出显示省略号仅限于支持css3的浏览器版本" class="headerlink" title="多行文字超出显示省略号仅限于支持css3的浏览器版本"></a>多行文字超出显示省略号<em>仅限于支持css3的浏览器版本</em></h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">display: -webkit-box; text-overflow: ellipsis; -webkit-line-clamp: 5; -webkit-box-orient: vertical; overflow: hidden;</div></pre></td></tr></table></figure>
<h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">宋体：&apos;\5B8B\4F53&apos;</div><div class="line">微软雅黑：&apos;\5FAE\8F6F\96C5\9ED1&apos;</div></pre></td></tr></table></figure>
<h2 id="css3穿透事件"><a href="#css3穿透事件" class="headerlink" title="css3穿透事件"></a>css3穿透事件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">pointer-events: auto | none;</div></pre></td></tr></table></figure>
<h2 id="兼容IE的CSS三角"><a href="#兼容IE的CSS三角" class="headerlink" title="兼容IE的CSS三角"></a>兼容IE的CSS三角</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">position:absolute;</div><div class="line">top:10px;</div><div class="line">left:0px;</div><div class="line">border-style:solid;</div><div class="line">border-width:50px;</div><div class="line">border-color:transparent transparent transparent #fff;/*上边框设置想要的颜色*/</div><div class="line">height:0;</div><div class="line">width:0;</div><div class="line">font-size:0;</div><div class="line">_border-color:tomato tomato tomato #fff; /*边框透明色 For IE6-*/</div><div class="line">_filter:chroma(color=tomato);/*边框透明色 For IE6-*/</div></pre></td></tr></table></figure>
<h2 id="改变input的placeholder的颜色"><a href="#改变input的placeholder的颜色" class="headerlink" title="改变input的placeholder的颜色"></a>改变input的placeholder的颜色</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">input[placeholder],</div><div class="line">::-webkit-input-placeholder&#123; color: #fff;&#125;</div></pre></td></tr></table></figure>
<h2 id="图片变成黑白"><a href="#图片变成黑白" class="headerlink" title="图片变成黑白"></a>图片变成黑白</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">-webkit-filter: grayscale(100%); -moz-filter: grayscale(100%); filter: grayscale(100%); filter: gray;</div></pre></td></tr></table></figure>
<h2 id="公共样式"><a href="#公共样式" class="headerlink" title="公共样式"></a>公共样式</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">.none&#123;display: none;&#125;</div><div class="line">.db&#123;display: block;&#125;</div><div class="line">.tl&#123;text-align: left;&#125;</div><div class="line">.txc&#123;text-align: center;&#125;</div><div class="line">.fl&#123;float: left;&#125;</div><div class="line">.fr&#123;float: right;&#125;</div><div class="line">.bc&#123;margin-left: auto;margin-right: auto&#125;</div><div class="line">.pr&#123;position: relative;&#125;</div><div class="line">.pa&#123;position: absolute;&#125;</div><div class="line">.ovh&#123;overflow: hidden;&#125;</div><div class="line">.ht&#123;display: block;overflow: hidden;text-indent: -9999em;&#125;</div><div class="line">.p-none&#123;pointer-events: none;&#125;</div><div class="line">.clearfix:after,.clearfix:before&#123;content: &quot;&quot;;display: table;&#125;</div><div class="line">.clearfix:after&#123;clear: both;&#125;</div><div class="line">.clearfix&#123;*zoom: 1;&#125;</div></pre></td></tr></table></figure>
<h1 id="JS部分"><a href="#JS部分" class="headerlink" title="JS部分"></a>JS部分</h1><h2 id="兼容各种浏览器版本的MP3音频插入方法"><a href="#兼容各种浏览器版本的MP3音频插入方法" class="headerlink" title="兼容各种浏览器版本的MP3音频插入方法"></a>兼容各种浏览器版本的MP3音频插入方法</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">var ua = navigator.userAgent.toLowerCase(),</div><div class="line">	sAudio = null;</div><div class="line">if(ua.match(/msie ([\d.]+)/))&#123;</div><div class="line">    sAudio = &apos;&lt;object classid=&quot;clsid:22D6F312-B0F6-11D0-94AB-0080C74C7E95&quot;&gt;&lt;param name=&quot;AutoStart&quot; loop=&quot;false&quot; value=&quot;1&quot; /&gt;&lt;param name=&quot;Src&quot; value=&quot;example/mp3.mp3&quot; /&gt;&lt;/object&gt;&apos;;</div><div class="line">&#125;else if(ua.match(/firefox\/([\d.]+)/))&#123;</div><div class="line">    sAudio = &apos;&lt;embed src=&quot;example/mp3.mp3&quot; type=&quot;audio/mp3&quot; autoplay=&quot;autoplay&quot; hidden=&quot;true&quot; loop=&quot;false&quot; mastersound&gt;&lt;/embed&gt;&apos;;</div><div class="line">&#125;else if(ua.match(/chrome\/([\d.]+)/))&#123;</div><div class="line">    sAudio = &apos;&lt;audio src=&quot;example/mp3.mp3&quot; type=&quot;audio/mp3&quot; autoplay=&quot;autoplay&quot; hidden=&quot;true&quot; loop=&quot;false&quot;&gt;&lt;/audio&gt;&apos;;</div><div class="line">&#125;else if(ua.match(/opera.([\d.]+)/))&#123;</div><div class="line">    sAudio = &apos;&lt;embed src=&quot;example/mp3.mp3&quot; hidden=&quot;true&quot; autoplay=&quot;autoplay&quot; loop=&quot;false&quot;&gt;&lt;noembed&gt;&lt;bgsounds src=&quot;example/mp3.mp3&quot;&gt;&lt;/noembed&gt;&apos;;</div><div class="line">&#125;else if(ua.match(/version\/([\d.]+).*safari/))&#123;</div><div class="line">    sAudio = &apos;&lt;audio src=&quot;example/mp3.mp3&quot; type=&quot;audio/mp3&quot; autoplay=&quot;autoplay&quot; hidden=&quot;true&quot; loop=&quot;false&quot;&gt;&lt;/audio&gt;&apos;;</div><div class="line">&#125;else &#123;</div><div class="line">    sAudio = &apos;&lt;embed src=&quot;example/mp3.mp3&quot; type=&quot;audio/mp3&quot; autoplay=&quot;autoplay&quot; hidden=&quot;true&quot; loop=&quot;false&quot; mastersound&gt;&lt;/embed&gt;&apos;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="js脚本库"><a href="#js脚本库" class="headerlink" title="js脚本库"></a>js脚本库</h2><h3 id="addClass"><a href="#addClass" class="headerlink" title="addClass"></a>addClass</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">function addClass(obj, cls)&#123;</div><div class="line">    var obj_class = obj.className,//获取 class 内容.</div><div class="line">    blank = (obj_class != &apos;&apos;) ? &apos; &apos; : &apos;&apos;;//判断获取到的 class 是否为空, 如果不为空在前面加个&apos;空格&apos;.</div><div class="line">    added = obj_class + blank + cls;//组合原来的 class 和需要添加的 class.</div><div class="line">    obj.className = added;//替换原来的 class.</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="addClass-1"><a href="#addClass-1" class="headerlink" title="addClass"></a>addClass</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">function addClass(obj, cls)&#123;</div><div class="line">    var obj_class = obj.className,//获取 class 内容.</div><div class="line">    blank = (obj_class != &apos;&apos;) ? &apos; &apos; : &apos;&apos;;//判断获取到的 class 是否为空, 如果不为空在前面加个&apos;空格&apos;.</div><div class="line">    added = obj_class + blank + cls;//组合原来的 class 和需要添加的 class.</div><div class="line">    obj.className = added;//替换原来的 class.</div><div class="line">&#125;</div><div class="line">function addClass(element, value) &#123;</div><div class="line">    if (!element.className) &#123;</div><div class="line">	element.className = value;</div><div class="line">    &#125; else &#123;</div><div class="line">        var newClassName = element.className;</div><div class="line">		newClassName += &quot; &quot;;</div><div class="line">		newClassName += value;</div><div class="line">		element.className = newClassName;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="hasClass"><a href="#hasClass" class="headerlink" title="hasClass"></a>hasClass</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">function hasClass(obj, cls)&#123;</div><div class="line">    var obj_class = obj.className,//获取 class 内容.</div><div class="line">    obj_class_lst = obj_class.split(/\s+/);//通过split空字符将cls转换成数组.</div><div class="line">    x = 0;</div><div class="line">    for(x in obj_class_lst) &#123;</div><div class="line">        if(obj_class_lst[x] == cls) &#123;//循环数组, 判断是否包含cls</div><div class="line">            return true;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return false;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="removeClass"><a href="#removeClass" class="headerlink" title="removeClass"></a>removeClass</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">function removeClass(obj, cls)&#123;</div><div class="line">    var obj_class = &apos; &apos;+obj.className+&apos; &apos;;//获取 class 内容, 并在首尾各加一个空格. ex) &apos;abc        bcd&apos; -&gt; &apos; abc        bcd &apos;</div><div class="line">    obj_class = obj_class.replace(/(\s+)/gi, &apos; &apos;),//将多余的空字符替换成一个空格. ex) &apos; abc        bcd &apos; -&gt; &apos; abc bcd &apos;</div><div class="line">    removed = obj_class.replace(&apos; &apos;+cls+&apos; &apos;, &apos; &apos;);//在原来的 class 替换掉首尾加了空格的 class. ex) &apos; abc bcd &apos; -&gt; &apos;bcd &apos;</div><div class="line">    removed = removed.replace(/(^\s+)|(\s+$)/g, &apos;&apos;);//去掉首尾空格. ex) &apos;bcd &apos; -&gt; &apos;bcd&apos;</div><div class="line">    obj.className = removed;//替换原来的 class.</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="兼容的getElementsByClassName"><a href="#兼容的getElementsByClassName" class="headerlink" title="兼容的getElementsByClassName"></a>兼容的getElementsByClassName</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">function getElementsByClassName(node, classname) &#123;</div><div class="line">    // 存在着用当前方法</div><div class="line">    if(node.getElementsByClassName) &#123;</div><div class="line">	return node.getElementsByClassName(classname);</div><div class="line">    &#125; else &#123;</div><div class="line">        var results = new Array();</div><div class="line">        var elems = node.getElementsByTagName(&quot;*&quot;);</div><div class="line">	for (var i=0; i &lt; elems.length; i++) &#123;</div><div class="line">	    if (elems[i].className.indexOf(classname) != -1) &#123;</div><div class="line">                results[results.length] = elems[i];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return results;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="获得任意样式的值"><a href="#获得任意样式的值" class="headerlink" title="获得任意样式的值"></a>获得任意样式的值</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">function getStyle(obj, name) &#123;</div><div class="line">	if (obj.currentStyle) &#123;</div><div class="line">		return obj.currentStyle[name];</div><div class="line">	&#125; else &#123;</div><div class="line">		return getComputed(obj, false)[name];</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="JS获取对象属性值的方法"><a href="#JS获取对象属性值的方法" class="headerlink" title="JS获取对象属性值的方法"></a>JS获取对象属性值的方法</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">第一种方法：obj.style</div><div class="line">第二种方法：obj[&apos;style&apos;]</div></pre></td></tr></table></figure>
<h2 id="手机号码正则"><a href="#手机号码正则" class="headerlink" title="手机号码正则"></a>手机号码正则</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">if( !/^(13[0-9]|14[0-9]|15[0-9]|18[0-9])\d&#123;8&#125;$/i.test(phonenumber) )&#123; </div><div class="line">	alert(&quot;手机号码格式有误！请重新填写！&quot;); </div><div class="line">	return false; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="效果类"><a href="#效果类" class="headerlink" title="效果类"></a>效果类</h1><h2 id="隐藏滚动条滚动"><a href="#隐藏滚动条滚动" class="headerlink" title="隐藏滚动条滚动"></a>隐藏滚动条滚动</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt; </div><div class="line">&lt;html&gt; </div><div class="line">&lt;head&gt; </div><div class="line">	&lt;title&gt;Test1-模块-CSS实现无滚动条滚动&lt;/title&gt; </div><div class="line">	&lt;meta charset=&quot;UTF-8&quot; &gt;</div><div class="line">	&lt;style&gt;</div><div class="line">		.wrap&#123;</div><div class="line">			width:500px;</div><div class="line">			height:500px;</div><div class="line">			overflow:hidden;</div><div class="line">		&#125;</div><div class="line">		.box1&#123;</div><div class="line">			width:520px;</div><div class="line">			height:500px;</div><div class="line">			overflow-y:scroll;</div><div class="line">			overflow-x:hidden;</div><div class="line">			background-color:#eee;</div><div class="line">		&#125;</div><div class="line">		.box2&#123;</div><div class="line">			height:1000px;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		/*.wrap&#123;</div><div class="line">			width:500px;</div><div class="line">			height:500px;</div><div class="line">			overflow:hidden;</div><div class="line">		&#125;</div><div class="line">		.box1&#123;</div><div class="line">			width:500px;</div><div class="line">			height:500px;</div><div class="line">			margin:0 20px;</div><div class="line">			overflow-x:scroll;</div><div class="line">			overflow-y:hidden;</div><div class="line">			background-color:#eee;</div><div class="line">		&#125;</div><div class="line">		.box2&#123;</div><div class="line">			width: 1000px;</div><div class="line">		&#125;*/</div><div class="line">	&lt;/style&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;div class=&quot;wrap&quot;&gt;</div><div class="line">	&lt;div class=&quot;box1&quot;&gt;</div><div class="line">		&lt;div class=&quot;box2&quot;&gt;</div><div class="line">			&lt;p&gt;box1和box2实现在一定高度的节点(box1)里展示大于该高度的节点(box2)&lt;/p&gt;</div><div class="line">			&lt;p&gt;box2里面滚动了多少可以通过box1.scrollTop来获取&lt;/p&gt;</div><div class="line">			&lt;p style=&quot;margin-bottom:850px;&quot;&gt;wrap作为最外层的节点，作用是用来隐藏滚动条的&lt;/p&gt;</div><div class="line">			&lt;p id=&quot;end&quot;&gt;The-end&lt;/p&gt;</div><div class="line">		&lt;/div&gt;</div><div class="line">	&lt;/div&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<h2 id="文字扫光"><a href="#文字扫光" class="headerlink" title="文字扫光"></a>文字扫光</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&lt;!doctype html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;meta charset=&quot;utf-8&quot;&gt;</div><div class="line">&lt;title&gt;无标题文档&lt;/title&gt;</div><div class="line">&lt;style type=&quot;text/css&quot; media=&quot;all&quot;&gt;</div><div class="line">html,body&#123; background:#000;&#125;</div><div class="line">p.shine&#123;width: 700px;&#125;</div><div class="line">.shine&#123;background: #222 -webkit-gradient(linear, left top, right top, from(#222), to(#222), color-stop(0.5, #fff)) 0 0 no-repeat;</div><div class="line">    -webkit-background-size: 125px;color: rgba(255, 255, 255, 0.1);-webkit-background-clip: text;font-family:&quot;微软雅黑&quot;;font-size:60px;font-weight:bold;display:block;position:absolute;left:50%; margin-left:-350px;top:50%; margin-top:-100px;-webkit-animation-name: shine;-webkit-animation-duration: 2s;-webkit-animation-iteration-count: infinite;&#125;</div><div class="line">@-webkit-keyframes shine&#123;</div><div class="line">    0%&#123;background-position: top left;&#125;</div><div class="line">    100%&#123;background-position: top right;&#125;</div><div class="line">&#125;</div><div class="line">&lt;/style&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;p class=&quot;shine&quot;&gt;Welcome to 5iweb&lt;/p&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<h2 id="翻牌效果"><a href="#翻牌效果" class="headerlink" title="翻牌效果"></a>翻牌效果</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line"></div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;meta charset=&quot;gb2312&quot; /&gt;</div><div class="line">&lt;meta name=&quot;robots&quot; content=&quot;all&quot; /&gt;</div><div class="line">&lt;meta name=&quot;Copyright&quot; content=&quot;&quot; /&gt;</div><div class="line">&lt;meta name=&quot;Description&quot; content=&quot;&quot; /&gt;</div><div class="line">&lt;meta name=&quot;Keywords&quot; content=&quot;&quot; /&gt;</div><div class="line">&lt;title&gt;&lt;/title&gt;</div><div class="line">&lt;style&gt;</div><div class="line">* &#123; margin: 0; padding: 0;&#125;</div><div class="line">body &#123; font: normal 14px/1.6 &quot;Microsoft Yahei&quot;,&quot;simsun&quot;; color: #fff;&#125;</div><div class="line">ol,ul &#123; list-style: none;&#125;</div><div class="line">img &#123; border: none; display: block;&#125;</div><div class="line">.clearfix:after &#123;content:&quot;.&quot;; display:block; height:0; clear:both; visibility:hidden&#125;</div><div class="line">.clearfix&#123;*zoom:1&#125;</div><div class="line">.wap a:link,.wap a:visited&#123;text-decoration: none;&#125;.wap a:hover,.wap a:active&#123;text-decoration:none;&#125;</div><div class="line">.top-nav a:link,.top-nav a:visited&#123; color:#fff;&#125;.top-nav a:hover,.top-nav a:active&#123; color:#95ca07;&#125;</div><div class="line">.none&#123; display:none;&#125;.dis-il&#123; display:inline-block;&#125;.p-a&#123; position:absolute;&#125;.p-r&#123; position:relative;&#125;.f-l&#123; float: left;&#125;.f-r&#123; float: right;&#125;.ovh&#123; overflow: hidden;&#125;.ht&#123; display: block; text-indent: -9999em; overflow: hidden;&#125;</div><div class="line"></div><div class="line">body&#123;padding-top: 42px; line-height:24px;font-size:14px;  min-width:1000px;&#125;</div><div class="line">.wap&#123;width:100%;min-width:1000px;&#125;</div><div class="line"></div><div class="line">.card-box&#123; padding: 0 0 50px 76px;&#125;</div><div class="line">.card-box li&#123; width: 203px; margin-right: 12px; perspective: 1000; -webkit-perspective: 1000px; -moz-perspective: 1000px; -ms-perspective: 1000px; -o-perspective: 1000px; perspective: 1000px;&#125;</div><div class="line">.card-box a&#123; position: relative; display: block; width: 203px; height: 277px; overflow: hidden; transition:transform 0.6s ease-out; transition: transform .5s ease-in-out; -webkit-transition: transform .5s ease-in-out; -moz-transition: transform .5s ease-in-out; -ms-transition: transform .5s ease-in-out; -o-transition: transform .5s ease-in-out; -webkit-transform-style: preserve-3d; -moz-transform-style: preserve-3d; -ms-transform-style: preserve-3d; -o-transform-style: preserve-3d; transform-style: preserve-3d;&#125;</div><div class="line">.card-box a img&#123; backface-visibility: hidden;transition: 0.6s ease-out;-webkit-transition: .6s ease-out; -webkit-transform-style: preserve-3d; -moz-transform-style: preserve-3d; -ms-transform-style: preserve-3d;-o-transform-style: preserve-3d;transform-style: preserve-3d; position: absolute;top: 0;left: 0;&#125;</div><div class="line">.card-box .card-1&#123; z-index: 2;transform: rotateY(0deg);transform: rotateY(0deg); -webkit-transform: rotateY(0deg);-moz-transform: rotateY(0deg);-ms-transform: rotateY(0deg);-o-transform: rotateY(0deg);&#125;</div><div class="line">.card-box .card-2&#123; z-index: 1;transform: rotateY(-180deg);transform: rotateY(-180deg);-webkit-transform: rotateY(-180deg);-moz-transform: rotateY(-180deg);</div><div class="line">-ms-transform: rotateY(-180deg);-o-transform: rotateY(-180deg);&#125;</div><div class="line">.card-box .active .card-1&#123; transform: rotateY(180deg);-webkit-transform: rotateY(180deg);-moz-transform: rotateY(180deg);-ms-transform: rotateY(180deg);-o-transform: rotateY(180deg); z-index:1;&#125;</div><div class="line">.card-box .active .card-2&#123; transform: rotateY(0deg); -webkit-transform: rotateY(0deg);-moz-transform: rotateY(0deg);-ms-transform: rotateY(0deg);-o-transform: rotateY(0deg); z-index:2;&#125;</div><div class="line">&lt;/style&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;div class=&quot;wap&quot;&gt;</div><div class="line">	&lt;ul class=&quot;card-box clearfix&quot; id=&quot;cardBox&quot;&gt;</div><div class="line">		&lt;li class=&quot;f-l&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;img src=&quot;ossweb-img/card-cover.png&quot; alt=&quot;card-cover&quot; class=&quot;card-1&quot;&gt;&lt;img src=&quot;ossweb-img/card-1.png&quot; alt=&quot;奖品&quot; class=&quot;card-2&quot;&gt;&lt;/a&gt;&lt;/li&gt;</div><div class="line">		&lt;li class=&quot;f-l&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;img src=&quot;ossweb-img/card-cover.png&quot; alt=&quot;card-cover&quot; class=&quot;card-1&quot;&gt;&lt;img src=&quot;ossweb-img/card-3.png&quot; alt=&quot;奖品&quot; class=&quot;card-2&quot;&gt;&lt;/a&gt;&lt;/li&gt;</div><div class="line">		&lt;li class=&quot;f-l&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;img src=&quot;ossweb-img/card-cover.png&quot; alt=&quot;card-cover&quot; class=&quot;card-1&quot;&gt;&lt;img src=&quot;ossweb-img/card-5.png&quot; alt=&quot;奖品&quot; class=&quot;card-2&quot;&gt;&lt;/a&gt;&lt;/li&gt;</div><div class="line">		&lt;li class=&quot;f-l&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;img src=&quot;ossweb-img/card-cover.png&quot; alt=&quot;card-cover&quot; class=&quot;card-1&quot;&gt;&lt;img src=&quot;ossweb-img/card-8.png&quot; alt=&quot;奖品&quot; class=&quot;card-2&quot;&gt;&lt;/a&gt;&lt;/li&gt;</div><div class="line">	&lt;/ul&gt;	</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;script&gt;</div><div class="line">	var aA = document.getElementById(&apos;cardBox&apos;).getElementsByTagName(&apos;a&apos;);</div><div class="line">	for (var i = 0; i &lt; aA.length; i++) &#123;</div><div class="line">		aA[i].index = i;</div><div class="line">		aA[i].onclick = function ()&#123;</div><div class="line">			this.className = &apos;active&apos;;	</div><div class="line">		&#125;;</div><div class="line">	&#125;;</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[给hexo添加搜索功能]]></title>
      <url>/2016/07/19/hexo-3/</url>
      <content type="html"><![CDATA[<p>给hexo加上搜索功能。（针对代码托管到github的博主，如果不是托管到github，推荐使用<a href="https://swiftype.com/" target="_blank" rel="external">swiftype</a>,网上有很多教程。<br><a id="more"></a></p>
<ol>
<li>安装 hexo-generator-search，在站点的根目录下执行以下命令：<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">$ npm install hexo-generator-search --save</div></pre></td></tr></table></figure></li>
<li>编辑 站点配置文件，新增以下内容到任意位置：<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">search:</div><div class="line">  path: search.xml</div><div class="line">  field: post</div></pre></td></tr></table></figure></li>
<li>编辑 站点配置文件，修改网站url，有两个地方要修改：<code>根目录下的_config.yml</code>，<code>根目录\node_modules\hexo\node_modules\hexo-cli\assets\_config.yml</code>，把url的值替换成<code>/</code><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line"># URL</div><div class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</div><div class="line">url: /</div></pre></td></tr></table></figure></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[各种hexo使用技巧]]></title>
      <url>/2016/07/17/hexo-2/</url>
      <content type="html"><![CDATA[<p>完善我们的hexo。<br><a id="more"></a></p>
<h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><p><a href="http://www.tuicool.com/articles/NneMnuF" target="_blank" rel="external">玩转hexo博客之next</a><br><a href="http://chenall.net/post/hexo_theme_chenall/" target="_blank" rel="external">Hexo 模块化主题</a><br><a href="http://blog.csdn.net/u011001084/article/details/51253928" target="_blank" rel="external">hexo使用技巧</a><br><a href="http://www.tuicool.com/articles/I36zYr" target="_blank" rel="external">hexo命令及Markdown语法</a><br><a href="http://www.cnblogs.com/rossoneri/p/4446440.html" target="_blank" rel="external">http://www.tuicool.com/articles/I36zYr</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hexo部署]]></title>
      <url>/2016/07/17/hexo-1/</url>
      <content type="html"><![CDATA[<p>开始我们的hexo之旅。<br><a id="more"></a><br>原文：<a href="http://www.chinaz.com/web/2016/0419/523442.shtml" target="_blank" rel="external">5分钟 搭建免费个人博客</a></p>
<h1 id="创建Github-域名和空间"><a href="#创建Github-域名和空间" class="headerlink" title="创建Github 域名和空间"></a>创建Github 域名和空间</h1><h2 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h2><p>首先你需要注册一个Github账号，已有的可以下翻去<strong>1.2创建仓库</strong>，注意username，这会影响到你的域名，你的域名将会是 username.github.io ，所以认真的取个名字吧。<br><img src="/images/hexo-build-1.png" alt="创建github帐号"><br>注册过程可能需要验证你的邮箱，其他就不在赘述。</p>
<h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>然后需要创建一个仓库(repository) 来存储我们的网站，点击首页任意位置出现的 New repository按钮创建仓库, Respository name 中的username.github.io 的username 一定与前面的Owner 一致，记住你的username下面会用到。<br><img src="/images/hexo-build-2.png" alt="创建github仓库"><br>第一步就已经完成了，下面是安装。<br><strong>注：</strong>相关网站建设技巧阅读请移步到建站教程频道。<a href="http://jingyan.baidu.com/article/b907e627d3c1d546e7891ceb.html" target="_blank" rel="external">Github如何创建项目仓库_百度经验</a></p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>Hexo 可以说是目前最流行的博客框架了，基于Nodejs，更多信息可以google，下面需要安装的工具包括 Git，Nodejs，Hexo。（Windows 用户自行搜索这些工具，直接安装即可，试过基本没啥问题）</p>
<h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>git安装没什么技巧，下载完成之后自行安装，一般使用默认选项。<br><a href="https://www.git-scm.com/download/" target="_blank" rel="external">git下载地址</a></p>
<h2 id="安装Nodejs"><a href="#安装Nodejs" class="headerlink" title="安装Nodejs"></a>安装Nodejs</h2><p>先安装nvm，这是Nodejs版本管理器，可以轻松切换Nodejs版本。</p>
<h3 id="nvm的安装"><a href="#nvm的安装" class="headerlink" title="nvm的安装"></a>nvm的安装</h3><p>window的nvm安装：<a href="http://blog.csdn.net/tyro_java/article/details/51232458" target="_blank" rel="external">nodejs在windows下的安装配置(使用NVM的方式)</a></p>
<ol>
<li>首先确保你的网络畅通，还有不被墙，如果需要翻墙，请看：<br><a href="https://github.com/getlantern/lantern" target="_blank" rel="external">https://github.com/getlantern/lantern</a></li>
<li>下载 nvm 包 地址：<a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="external">https://github.com/coreybutler/nvm-windows/releases</a>，我们选择第一个：nvm-noinstall.zip 下载完成后解压到一个地方，比如: D:\mynode\nvm 里面的文件列表是这样的：<strong>elevate.cmd</strong>、<strong>elevate.vbs</strong>、<strong>install.cmd</strong>、<strong>LICENSE</strong>、<strong>nvm.exe</strong></li>
<li>备注：windows下要设置显示文件类型的扩展名，这样才能看到上述文件的后缀</li>
<li>双击 install.cmd 然后会让你输入“压缩文件解压或拷贝到的一个绝对路径” 先不用管它，直接回车，成功后，会在C盘的根目录生成一个settings.txt的文本文件，把这个文件剪切到D:\mynode\nvm<em>（当然了，你可以放到你喜欢的任意目录下，然后对照你的目录修改下面的路径）</em>目录中，然后我们把它的内容修改成这样：<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">root: D:\mynode\nvm </div><div class="line">path: D:\mynode\nodejs </div><div class="line">arch: 64 </div><div class="line">proxy: none</div></pre></td></tr></table></figure></li>
<li>然后我们开始配置环境变量了（右键我的电脑-高级系统设置-环境变量），因为刚刚点击了install.cmd的文件，那么会在环境变量的系统变量中，生成两个环境变量：<code>NVM_HOME</code> 和 <code>NVM_SYMLINK</code> 我们开始修改这两个变量名的变量值：<code>NVM_HOME</code>的变量值为：<code>D:\mynode\nvm</code>； <code>NVM_SYMLINK</code>的变量值为：<code>D:\mynode\nodejs</code><br><img src="/images/hexo-build-3.png" alt="设置环境变量"></li>
<li>我们还会发现，在Path中也会自动添加上D:\mynode\nvm;或者是D:\mynode\nodejs，如果有的话，把他们删掉，没有的话更好，我们自己来配置，在Path的最前面输入：<code>;%NVM_HOME%;%NVM_SYMLINK%;</code></li>
<li>打开一个cmd窗口输入命令：<code>nvm v</code> ，那么我们会看到当前nvm的版本信息。然后我们可以安装nodejs了。</li>
<li>继续输入命令：<code>nvm install latest</code> 如果网络畅通，我们会看到正在下载的提示，下载完成后 会让你use那个最新的node版本。</li>
<li>如果你是第一次下载，在use之前，D:\mynode目录下是没有nodejs这个文件夹的，在输入比如： nvm use 6.3.0 之后，你会发现，D:\mynode目录下多了一个nodejs文件夹，这个文件夹不是单纯的文件夹，它是一个快捷方式，指向了 D:\mynode\nvm 里的 v6.3.0 文件夹。</li>
<li>同样的咱们可以下载其他版本的nodejs，这样通过命令:<code>nvm use</code> 版本号 比如：<code>nvm use 6.3.0</code>就可以轻松实现版本切换了。</li>
<li>备注： 如果你的电脑系统是32 位的，那么在下载nodejs版本的时候，一定要指明 32 如： <code>nvm install 6.3.0 32</code> 这样在32位的电脑系统中，才可以使用，默认是64位的。</li>
</ol>
<h3 id="npm的安装"><a href="#npm的安装" class="headerlink" title="npm的安装"></a>npm的安装</h3><ol>
<li>首先我们进入命令模式，输入 <code>npm config set prefix &quot;D:\mynode\nvm\npm&quot;</code> 回车，这是在配置npm的全局安装路径，然后在用户文件夹下会生成一个.npmrc的文件，用记事本打开后可以看到如下内容：<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">prefix=D:\mynode\nvm\npm</div></pre></td></tr></table></figure></li>
<li>然后继续在命令中输入： <code>npm install npm -g</code> 回车后会发现正在下载npm包，在D:\mynode\nvm\npm目录中可以看到下载中的文件，以后我们只要用npm安装包的时候加上 -g 就可以把包安装在我们刚刚配置的全局路径下了。</li>
<li>我们为这个npm配置环境变量： 变量名为：<code>NPM_HOME</code>，变量值为 ：<code>D:\mynode\nvm\npm</code></li>
<li>在Path的最前面添加<code>;%NPM_HOME%</code>，注意了，这个一定要添加在 <code>%NVM_SYMLINK%</code>之前，所以我们直接把它放到Path的最前面</li>
<li>最后我们新打开一个cmd命令窗口，输入<code>npm -v</code> ,此时我们使用的就是我们统一下载的npm包了。</li>
</ol>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>以上所有都安装完成之后再安装Hexo<br>打开<strong>Git Bash</strong>，输入以下代码：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">$ npm install -g hexo-cli</div></pre></td></tr></table></figure><br>所有必须工具已经安装完成，下面我们就可以生成博客，上传至我们的Github 仓库了。</p>
<h1 id="编写，发布"><a href="#编写，发布" class="headerlink" title="编写，发布"></a>编写，发布</h1><p>接下来我们需要用Hexo初始化一个博客，然后更改一些自定义的配置，或者加上自己喜欢的主题，写上第一篇文章，然后发布到自己的个人Github网站(username.github.io)。</p>
<h2 id="创建博客"><a href="#创建博客" class="headerlink" title="创建博客"></a>创建博客</h2><p>将下面的 username 替换成你自己的username(其实也无所谓，作者强迫症)<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">$ hexo init username.github.io</div></pre></td></tr></table></figure></p>
<h2 id="更改配置"><a href="#更改配置" class="headerlink" title="更改配置"></a>更改配置</h2><ol>
<li>主题安装<br>为了使博客不太难看，我们需要安装一个主题，切换至刚刚生成的Hexo 目录，安装主题<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">$ cd username.github.io</div><div class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure>
这里选了一个极简的主题，也是Hexo众多主题中最受欢迎的一个。上面出现的喵神的主题 在这里。Hexo也有更多主题供你选择。</li>
<li>基础配置<br>打开username.github.io/_config.yml修改几个键值对，下面把几个必须设置的列出来按需求修改，记得保存。更多设置…<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">title: dimsky 的 9 维空间 //你博客的名字</div><div class="line">author: dimsky //你的名字</div><div class="line">language: zh-Hans //语言 中文</div><div class="line">theme: next //刚刚安装的主题名称</div><div class="line">deploy:</div><div class="line">    type: git //使用Git 发布</div><div class="line">    repo: https://github.com/username/username.github.io.git // 刚创建的Github仓库</div></pre></td></tr></table></figure></li>
<li>主题配置<br>主题配置文件在username.github.io/themes/next/_config.yml中修改，这里略过。设置详情可查看：<a href="http://theme-next.iissnan.com/getting-started.html#theme-settings" target="_blank" rel="external">http://theme-next.iissnan.com/getting-started.html#theme-settings</a></li>
</ol>
<h2 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h2><p>所有基础框架都已经创建完成，接下来可以开始写你的第一篇博客了<br>在username.github.io/source/_posts下创建你的第一个博客吧，例如，创建一个名为FirstNight.md的文件，用Markdown大肆发挥吧，注意保存。<br>如：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">title: 欢迎来到一个人的凌晨的空间</div><div class="line">date: 1468741925157</div><div class="line">---</div><div class="line">这是一个随手笔记的博客，里面都是我个人在平常遇到的问题的解决办法，和一些实用技巧，以及一些琐事。</div></pre></td></tr></table></figure></p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">$ hexo s</div></pre></td></tr></table></figure>
<p>测试服务启动，你可以在浏览器中输入<code>https://localhost:4000</code><em>（不行的话输入<code>127.0.0.1:4000</code>）</em>就可以访问了。</p>
<h2 id="安装hexo-deployer-git自动部署发布工具"><a href="#安装hexo-deployer-git自动部署发布工具" class="headerlink" title="安装hexo-deployer-git自动部署发布工具"></a>安装hexo-deployer-git自动部署发布工具</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>
<h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2><p>测试没问题后，我们就生成静态网页文件发布至我们的Github pages 中。<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</div></pre></td></tr></table></figure><br>如果这是你的第一次，终端会让你输入Github 的邮箱和密码，正确输入后，骚等片刻，就会把你的博客上传至Github 了。以后在每次把博客写完后，执行一下这个命令就可以直接发布了，灰常苏胡。</p>
<h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>是不是很快，恭喜你能走到这一步，你的博客已经完成了，在浏览器中输入 <code>https://username.github.io</code> 就能够访问了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[欢迎来到一个人的凌晨的空间]]></title>
      <url>/2016/07/16/hello-world/</url>
      <content type="html"><![CDATA[<p>这是一个随手笔记的博客，里面都是我个人在平常遇到的问题的解决办法，和一些实用技巧，以及一些琐事。</p>
]]></content>
    </entry>
    
  
  
</search>
